/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quantum_annealing_simulation;

import org.nd4j.linalg.api.buffer.DataType;
import org.nd4j.linalg.api.ndarray.INDArray;
import org.nd4j.linalg.api.ops.random.impl.Range;
import org.nd4j.linalg.factory.Nd4j;
import org.nd4j.linalg.api.rng.DefaultRandom;
import org.nd4j.linalg.api.rng.Random;

public class App {
    public static void main(String[] args) {
        final int N = 5;

        // Random rand = new DefaultRandom(915);
        // INDArray E = Nd4j.randn(0.0, N / 2.0, new long[] { (long) Math.pow(2, N), 1 }, rand);

        // QuantumAnnealing quantumAnnealing = new QuantumAnnealing(N, E);

        // INDArray H = null;
        // double step = 0.01;
        // Range range = new Range(0, quantumAnnealing.getTau() / step + 1, step,
        // DataType.DOUBLE);
        // INDArray time_steps = Nd4j.create(range.calculateOutputShape().toArray());
        // for (int i = 0; i < time_steps.length(); i++) {
        // time_steps.set(i, step * i);
        // }

        // for (Double t : time_steps) {
        // H = quantumAnnealing.create_tfim(t, H);
        // }
    }
}